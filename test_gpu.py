"""
Script de teste r√°pido para verificar se GPU est√° funcionando
"""
import lightgbm as lgb
import numpy as np
from sklearn.datasets import make_regression
import time

print("="*70)
print("üîç TESTE DE GPU - TradeSigns POC")
print("="*70)

# Verificar vers√£o
print(f"\nüì¶ LightGBM version: {lgb.__version__}")

# Dataset de teste
print("\nüìä Criando dataset de teste (100k samples, 50 features)...")
X, y = make_regression(n_samples=100000, n_features=50, random_state=42)

# Testar CPU
print("\n‚è±Ô∏è  TESTE 1: Treinando com CPU...")
start = time.time()
try:
    model_cpu = lgb.LGBMRegressor(
        device='cpu',
        n_estimators=100,
        verbose=-1
    )
    model_cpu.fit(X, y)
    cpu_time = time.time() - start
    print(f"‚úì CPU: {cpu_time:.2f}s")
except Exception as e:
    print(f"‚ùå Erro CPU: {e}")
    cpu_time = None

# Testar GPU
print("\n‚è±Ô∏è  TESTE 2: Treinando com GPU...")
start = time.time()
try:
    model_gpu = lgb.LGBMRegressor(
        device='gpu',
        gpu_platform_id=0,
        gpu_device_id=0,
        n_estimators=100,
        verbose=-1
    )
    model_gpu.fit(X, y)
    gpu_time = time.time() - start
    print(f"‚úì GPU: {gpu_time:.2f}s")
except Exception as e:
    print(f"\n‚ùå Erro ao usar GPU: {e}")
    print("\nüîç Poss√≠veis causas:")
    print("   1. CUDA n√£o instalado corretamente")
    print("   2. LightGBM compilado sem suporte GPU")
    print("   3. Driver NVIDIA desatualizado")
    print("\nüìñ Consulte: docs/GPU_SETUP_GUIDE.md")
    gpu_time = None

# Resultado
print("\n" + "="*70)
print("üìä RESULTADOS")
print("="*70)

if cpu_time and gpu_time:
    speedup = cpu_time / gpu_time
    print(f"\n‚ö° CPU:     {cpu_time:.2f}s")
    print(f"‚ö° GPU:     {gpu_time:.2f}s")
    print(f"üöÄ Speedup: {speedup:.2f}x mais r√°pido!")
    
    if speedup > 2.0:
        print("\n‚úÖ GPU est√° funcionando PERFEITAMENTE!")
        print("   Pronto para treinar o modelo completo!")
    elif speedup > 1.2:
        print("\n‚úÖ GPU funcionando, mas com speedup modesto")
        print("   (Normal para datasets pequenos)")
    else:
        print("\n‚ö†Ô∏è  GPU n√£o est√° acelerando como esperado")
        print("   Verifique configura√ß√µes CUDA")
elif cpu_time:
    print(f"\n‚ö° CPU: {cpu_time:.2f}s")
    print("\n‚ö†Ô∏è  GPU n√£o dispon√≠vel - usando apenas CPU")
else:
    print("\n‚ùå Ambos falharam - verifique instala√ß√£o")

print("\n" + "="*70)

# Verificar NVIDIA
print("\nüîç Verificando NVIDIA GPU...")
try:
    import subprocess
    nvidia_smi = subprocess.check_output(
        ['nvidia-smi', '--query-gpu=name,memory.total,driver_version', '--format=csv,noheader'],
        stderr=subprocess.DEVNULL
    )
    gpu_info = nvidia_smi.decode('utf-8').strip()
    print(f"‚úì GPU detectada: {gpu_info}")
except Exception as e:
    print(f"‚ö†Ô∏è  nvidia-smi n√£o dispon√≠vel")
    print(f"   Certifique-se de que os drivers NVIDIA est√£o instalados")

print("\n‚úÖ Teste conclu√≠do!")
print("="*70)
